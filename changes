// Utility: Get current service info and isApplication
  const getCurrentServiceInfo = (customFormData = null, customFieldDefs = null) => {
    const fd = customFieldDefs || fieldDefs;
    const data = customFormData || formData;
    const serviceField = fd.find(f => f.name === 'service');
    if (!serviceField?.options || !data.service) return { isApplication: false, serviceOption: null };
    const serviceOption = serviceField.options.find(opt => {
      const { name } = parseServiceOption(opt);
      return name === data.service;
    });
    if (serviceOption) {
      const { type } = parseServiceOption(serviceOption);
      return {
        isApplication: type && type.toUpperCase() === 'APPLICATION',
        serviceOption
      };
    }
    return { isApplication: false, serviceOption: null };
  };

  // Update isApplication after any relevant field change
  useEffect(() => {
    const { isApplication } = getCurrentServiceInfo();
    setIsApplication(isApplication);
  }, [formData, fieldDefs]);
