const handleTimeChange = async (option) => {
  // If the selected option is "custom", open the calendar instead
  if (option.value === "custom") {
    setDropdownOpen(false);
    setCalendarOpen(true);
    return;
  }

  // Always close dropdown and calendar
  setDropdownOpen(false);
  setCalendarOpen(false);

  // Pause carousel autoplay
  setPaused(true);

  // Update selected time label and value
  setSelectedTimeLabel(option.label);
  setSelectedTimeValue(option.value);

  // Update chart titles immediately based on label
  updateChartTitles(option.label);

  // Fetch and set chart data
  try {
    const updatedCharts = await fetchFilteredData(option.value);
    setCharts(updatedCharts);
    setCurrentIndex(0); // Reset carousel index
  } finally {
    setPaused(false);
  }
};
