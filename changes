// In handleTimeChange
const handleTimeChange = async (option) => {
  if (option.value === "custom") {
    setDropdownOpen(false);
    setCalendarOpen(true);
    return;
  }

  setSelectedTimeLabel(option.label);
  setSelectedTimeValue(option.value);
  setDropdownOpen(false);
  setCalendarOpen(false);
  setPaused(true);
  setIsLoading(true);

  try {
    const updatedCharts = await fetchFilteredData(option.value);
    if (updatedCharts.length > 0) {
      setCurrentIndex(0); // Reset index before setting charts
      setCharts(updatedCharts); // Set chart data
      setCurrentDisplayTitle(updatedCharts[0].title); // Use freshly returned title
    }
  } finally {
    setIsLoading(false);
    setPaused(false);
  }
};








/////////////////////////////////////////


// In handleDateSelect
const handleDateSelect = async (date) => {
  const formattedDate = formatDate(date);
  const dateValue = `custom_${date.toISOString().split('T')[0]}`;

  setSelectedDate(date);
  setSelectedTimeLabel(`Custom: ${formattedDate}`);
  setSelectedTimeValue(dateValue);
  setCalendarOpen(false);
  setPaused(true);
  setIsLoading(true);

  try {
    const updatedCharts = await fetchFilteredData(dateValue);
    if (updatedCharts.length > 0) {
      setCurrentIndex(0); // Reset first
      setCharts(updatedCharts);
      setCurrentDisplayTitle(updatedCharts[0].title);
    }
  } finally {
    setIsLoading(false);
    setPaused(false);
  }
};
