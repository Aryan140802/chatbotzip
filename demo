import axios from 'axios';
import https from 'https';

// Create axios instance with custom configuration
const api = axios.create({
  baseURL: 'https://10.191.171.12:5443/PyPortal/',
  timeout: 100000,
  headers: {
    'Content-Type': 'application/json',
  },
  httpsAgent: new https.Agent({  
    rejectUnauthorized: false // Only for development with self-signed certs
  })
});

// Modified postMessage to handle both regular messages and form data
export const postMessage = (data) => {
  // If data is a string (regular message)
  if (typeof data === 'string') {
    return api.post('EIS-GINI/', { "message": data }, { timeout: 100000 });
  }
  
  // If data is form data (array of fields)
  if (Array.isArray(data)) {
    return api.post('EIS-GINI/', { "fields": data }, { timeout: 100000 });
  }

  // If data is an object (form submission)
  if (typeof data === 'object' && data !== null) {
    // Convert form data to array format for backend
    const formData = Object.entries(data).map(([fieldName, fieldValue]) => ({
      fieldName,
      fieldValue: Array.isArray(fieldValue) ? fieldValue : [fieldValue]
    }));
    return api.post('EIS-GINI/', { "fields": formData }, { timeout: 100000 });
  }

  // Default case (fallback)
  return api.post('EIS-GINI/', { "message": JSON.stringify(data) }, { timeout: 100000 });
};

// All other API functions remain unchanged
export const getPost = () => {
  return api.get('EIS-GINI/', { timeout: 100000 });
};

export const getServiceSys = () => {
  return api.get('EISHome/servicewise_sys/');
};

export const getServiceExp = () => {
  return api.get('EISHome/servicewise_exp/');
};

export const getIpwiseSys = () => {
  return api.get('EISHome/ipwise_sys/');
};

export const getIpwiseExp = () => {
  return api.get('EISHome/ipwise_exp/');
};

export const getPortwiseSys = () => {
  return api.get('EISHome/portwise_sys/');
};

export const getPortwiseExp = () => {
  return api.get('EISHome/portwise_exp/');
};

export const getServiceWiseExp5 = () => {
  return api.get('EISHome/servicewise_top5_exp/');
};

export const getServiceWiseSys5 = () => {
  return api.get('EISHome/servicewise_top5_sys/');
};

export const getIpWiseExp5 = () => {
  return api.get('EISHome/ipwise_exp_top5/');
};

export const getIpWiseSys5 = () => {
  return api.get('EISHome/ipwise_sys_top5/');
};

export const getPortWiseExp5 = () => {
  return api.get('EISHome/portwise_top5_exp/');
};

export const getPortWiseSys5 = () => {
  return api.get('EISHome/portwise_top5_sys/');
};

export const getFARExpires = () => {
  return api.get('EISHome/farExpiresNext5M/');
};

// Time-based post functions remain unchanged
export const postServiceWiseExp5 = async (time) => {
  try {
    const uid = localStorage.getItem('uidd');
    const password = localStorage.getItem('password');
    const response = await api.post('EISHome/servicewise_top5_FiveM/EXP/', { 
      "time": time,
      "uid": uid,
      "password": password
    });
    return response;
  } catch (error) {
    console.error('Could not fetch error:', error);
    throw error;
  }
};

export const postServiceWiseSys5 = async (time) => {
  try {
    const uid = localStorage.getItem('uidd');
    const password = localStorage.getItem('password');
    const response = await api.post('EISHome/servicewise_top5_FiveM/SYS/', { 
      "time": time,
      "uid": uid,
      "password": password
    });
    return response;
  } catch (error) {
    console.error('Could not fetch error:', error);
    throw error;
  }
};

export const postIpWiseExp5 = async (time) => {
  try {
    const uid = localStorage.getItem('uidd');
    const password = localStorage.getItem('password');
    const response = await api.post('EISHome/ipwise_top5_FiveM/EXP/', { 
      "time": time,
      "uid": uid,
      "password": password
    });
    return response;
  } catch (error) {
    console.error('Could not fetch error:', error);
    throw error;
  }
};

export const postIpWiseSys5 = async (time) => {
  try {
    const uid = localStorage.getItem('uidd');
    const password = localStorage.getItem('password');
    const response = await api.post('EISHome/ipwise_top5_FiveM/SYS/', { 
      "time": time,
      "uid": uid,
      "password": password
    });
    return response;
  } catch (error) {
    console.error('Could not fetch error:', error);
    throw error;
  }
};

export const postPortWiseExp5 = async (time) => {
  try {
    const uid = localStorage.getItem('uidd');
    const password = localStorage.getItem('password');
    const response = await api.post('EISHome/portwise_top5_FiveM/EXP/', { 
      "time": time,
      "uid": uid,
      "password": password
    });
    return response;
  } catch (error) {
    console.error('Could not fetch error:', error);
    throw error;
  }
};

export const postPortWiseSys5 = async (time) => {
  try {
    const uid = localStorage.getItem('uidd');
    const password = localStorage.getItem('password');
    const response = await api.post('EISHome/portwise_top5_FiveM/SYS/', { 
      "time": time,
      "uid": uid,
      "password": password
    });
    return response;
  } catch (error) {
    console.error('Could not fetch error:', error);
    throw error;
  }
};
